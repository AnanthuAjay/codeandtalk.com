{
  "description": "If a customer changes their address, it's often not enough to update their master data record. E.g. the component processing customer orders might have to learn about the update in order to ship to the correct address. \nIn a distributed architecture, you have to spread information about a master data update to several client apps. You can do this via REST, but if a client app is temporarily down or too busy to accept requests, it's going to miss the information. Adding a new client app requires changes to the master app. Asynchronous messaging helps to avoid such a tight coupling of components. And it offers much more than a simple action trigger: parallelizing computing-heavy tasks, load testing, or migrating existing components to new services are some of the possibilities explored in this talk. You're going to learn how to get started with asynchronous messaging, and how it helps you to keep your codebase clean and your overal l system stable as well as maintainable.",
  "recorded": "2016-03-22",
  "speakers": ["kerstin-puschke"],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/2caTK0J7IQI/hqdefault.jpg",
  "title": "Decouple all the things: Asynchronous messaging keeps it simple.",
  "videos": [
    {
      "code": "2caTK0J7IQI",
      "type": "youtube"
    }
  ]
}
