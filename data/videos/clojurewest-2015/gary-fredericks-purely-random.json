{
    "description": "Random number generation is unsettled territory in the Clojure ecosystem. The language's built-in mutable random number generator is not helpful for more purely functional approaches. An immutable, splittable RNG has an ideal interface, but is challenging to implement robustly. This talk will motivate the topic by showing how switching to splittable RNGs makes the implementation of test.check (the property-based testing library) more solid, and describe an implementation of a splittable RNG in Clojure based on recent research.",
    "recorded": "2015-04-20",
    "speakers": [],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/u0t-6lUvXHo/hqdefault.jpg",
    "title": "Gary Fredericks - Purely Random",
    "videos": [
        {
            "code": "u0t-6lUvXHo",
            "type": "youtube"
        }
    ]
}